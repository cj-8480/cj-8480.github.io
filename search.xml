<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java 多线程并行管理工具类</title>
    <url>/2021/07/21/Java-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%B9%B6%E8%A1%8C%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
    <content><![CDATA[<p>摘要: 123</p>
<span id="more"></span>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CountDownLatch;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Stream;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"> </span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadUtil</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">	<span class="comment">/** 线程池 线程数 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> THREAD_POOL_SIZE = <span class="number">5</span>;</span><br><span class="line"> </span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 操作并行处理完成返回</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> list</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> groupSize</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> helper</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">execute</span><span class="params">(String name, List&lt;T&gt; list, <span class="keyword">int</span> groupSize, IRunHelper&lt;T&gt; helper)</span> </span>&#123;</span><br><span class="line">		ExecutorService executorService = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			List&lt;List&lt;T&gt;&gt; split = splitList(list, groupSize);</span><br><span class="line">			<span class="keyword">int</span> size = split.size();</span><br><span class="line">			log.info(<span class="string">&quot;Count：&#123;&#125;&quot;</span>, size);</span><br><span class="line">			<span class="comment">// 开始操作多线程,并添加门闩</span></span><br><span class="line">			CountDownLatch countDownLatch = <span class="keyword">new</span> CountDownLatch(size);</span><br><span class="line">			executorService = Executors.newFixedThreadPool(THREAD_POOL_SIZE);</span><br><span class="line"> </span><br><span class="line">			Iterator&lt;List&lt;T&gt;&gt; iterator = split.iterator();</span><br><span class="line">			<span class="keyword">boolean</span> hasNext = iterator.hasNext();</span><br><span class="line">			<span class="keyword">while</span> (hasNext) &#123;</span><br><span class="line">				List&lt;T&gt; next = iterator.next();</span><br><span class="line">				executorService.submit(<span class="keyword">new</span> Runner&lt;T&gt;(name, next, countDownLatch, helper));</span><br><span class="line">				hasNext = iterator.hasNext();</span><br><span class="line">			&#125;</span><br><span class="line"> </span><br><span class="line">			<span class="comment">// 所有门闩打开后继续</span></span><br><span class="line">			countDownLatch.await();</span><br><span class="line">			log.info(<span class="string">&quot;&#123;&#125; Complete!&quot;</span>, name);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">			log.error(e.getMessage(), e);</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (!(<span class="keyword">null</span> == executorService || executorService.isShutdown())) &#123;</span><br><span class="line">				executorService.shutdown();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"> </span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> &lt;T&gt; List&lt;List&lt;T&gt;&gt; splitList(List&lt;T&gt; list, <span class="keyword">int</span> groupSize) &#123;</span><br><span class="line">		<span class="keyword">int</span> size = list.size();</span><br><span class="line">		<span class="keyword">int</span> limit = (size + groupSize - <span class="number">1</span>) / groupSize;</span><br><span class="line">		<span class="keyword">return</span> Stream.iterate(<span class="number">0</span>, n -&gt; n + <span class="number">1</span>).limit(limit).parallel()</span><br><span class="line">				.map(a -&gt; list.stream().skip(a * groupSize).limit(groupSize).parallel().collect(Collectors.toList()))</span><br><span class="line">				.collect(Collectors.toList());</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 业务逻辑执行注入</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@author</span> jun.chen</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">interface</span> <span class="title">IRunHelper</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"> </span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 具体操作</span></span><br><span class="line"><span class="comment">		 * </span></span><br><span class="line"><span class="comment">		 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="function"><span class="keyword">void</span> <span class="title">operate</span><span class="params">(String name, List&lt;T&gt; list)</span></span>;</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">	<span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Runner</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">		<span class="keyword">private</span> String name;</span><br><span class="line"> </span><br><span class="line">		<span class="keyword">private</span> List&lt;T&gt; list;</span><br><span class="line"> </span><br><span class="line">		<span class="keyword">private</span> CountDownLatch countDownLatch;</span><br><span class="line"> </span><br><span class="line">		<span class="keyword">private</span> IRunHelper&lt;T&gt; helper;</span><br><span class="line"> </span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="title">Runner</span><span class="params">(String name, List&lt;T&gt; list, CountDownLatch countDownLatch, IRunHelper&lt;T&gt; helper)</span> </span>&#123;</span><br><span class="line">			<span class="keyword">this</span>.name = name;</span><br><span class="line">			<span class="keyword">this</span>.list = list;</span><br><span class="line">			<span class="keyword">this</span>.countDownLatch = countDownLatch;</span><br><span class="line">			<span class="keyword">this</span>.helper = helper;</span><br><span class="line">		&#125;</span><br><span class="line"> </span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				Thread currentThread = Thread.currentThread();</span><br><span class="line">				String currentName = String.format(<span class="string">&quot;%s_%s_%s&quot;</span>, <span class="keyword">this</span>.name, currentThread.getName(),</span><br><span class="line">						currentThread.getId());</span><br><span class="line">				<span class="keyword">this</span>.helper.operate(currentName, <span class="keyword">this</span>.list);</span><br><span class="line">			&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">				log.error(e.getMessage(), e);</span><br><span class="line">			&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">				<span class="comment">// 打开门闩</span></span><br><span class="line">				<span class="keyword">this</span>.countDownLatch.countDown();</span><br><span class="line">			&#125;</span><br><span class="line"> </span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">int</span> groupSize = <span class="number">4</span>;</span><br><span class="line">		<span class="keyword">while</span> (i &lt; <span class="number">5</span>) &#123;</span><br><span class="line">			List&lt;String&gt; list = Arrays.asList(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>, <span class="string">&quot;e&quot;</span>, <span class="string">&quot;f&quot;</span>, <span class="string">&quot;g&quot;</span>, <span class="string">&quot;h&quot;</span>, <span class="string">&quot;i&quot;</span>, <span class="string">&quot;j&quot;</span>, <span class="string">&quot;k&quot;</span>, <span class="string">&quot;l&quot;</span>, <span class="string">&quot;m&quot;</span>, <span class="string">&quot;n&quot;</span>, <span class="string">&quot;o&quot;</span>,</span><br><span class="line">					<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="string">&quot;D&quot;</span>, <span class="string">&quot;E&quot;</span>, <span class="string">&quot;F&quot;</span>, <span class="string">&quot;G&quot;</span>, <span class="string">&quot;H&quot;</span>, <span class="string">&quot;I&quot;</span>, <span class="string">&quot;J&quot;</span>, <span class="string">&quot;K&quot;</span>, <span class="string">&quot;L&quot;</span>, <span class="string">&quot;M&quot;</span>, <span class="string">&quot;N&quot;</span>, <span class="string">&quot;O&quot;</span>);</span><br><span class="line">			ThreadUtil.execute(<span class="string">&quot;Test&quot;</span> + <span class="string">&quot;-&quot;</span> + i, list, groupSize, <span class="keyword">new</span> IRunHelper&lt;String&gt;() &#123;</span><br><span class="line"> </span><br><span class="line">				<span class="meta">@Override</span></span><br><span class="line">				<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">operate</span><span class="params">(String name, List&lt;String&gt; list)</span> </span>&#123;</span><br><span class="line">					log.info(<span class="string">&quot;Thread:&#123;&#125; Size:&#123;&#125; Info:&#123;&#125;&quot;</span>, name, list.size(),</span><br><span class="line">							String.join(<span class="string">&quot;,&quot;</span>, list.toArray(<span class="keyword">new</span> String[<span class="number">0</span>])));</span><br><span class="line">				&#125;</span><br><span class="line"> </span><br><span class="line">			&#125;);</span><br><span class="line"> </span><br><span class="line">			i++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>多线程</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>H5游戏合集</title>
    <url>/2021/08/07/%E6%89%AB%E9%9B%B7/</url>
    <content><![CDATA[<details>
<summary>扫雷游戏</summary>

<iframe height=850 width=90% src="/games/MineSweeping/"  
 frameborder=0  allowfullscreen> </iframe>
</details>]]></content>
      <categories>
        <category>游戏</category>
      </categories>
  </entry>
</search>
